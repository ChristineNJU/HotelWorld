<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hotel.dao.VipMapper" >
  <resultMap id="BaseResultMap" type="hotel.model.Vip" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="FLOAT" />
    <result column="points" property="points" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="statusbegin" property="statusbegin" jdbcType="DATE" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="spend" property="spend" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, gender, phone, credit, money, points, status, statusbegin, level,username
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vip
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="String">
    select
    <include refid="Base_Column_List" />
    from vip
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vip
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="hotel.model.Vip" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into vip (name, gender,
      phone, credit, money, 
      points, status, statusbegin, 
      level,username,password)
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
      #{phone,jdbcType=VARCHAR}, #{credit,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER}, 
      #{points,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{statusbegin,jdbcType=DATE}, 
      #{level,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR})
    <selectKey keyProperty="id" resultType="int" order="AFTER">
      SELECT LAST_INSERT_ID();
    </selectKey>
</insert>
  <insert id="insertSelective" parameterType="hotel.model.Vip" >
    insert into vip
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="statusbegin != null" >
        statusbegin,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        #{points,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="statusbegin != null" >
        #{statusbegin,jdbcType=DATE},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hotel.model.Vip" >
    update vip
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="statusbegin != null" >
        statusbegin = #{statusbegin,jdbcType=DATE},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hotel.model.Vip" >
    update vip
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      statusbegin = #{statusbegin,jdbcType=DATE},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getPasswordByUsername" resultType="java.lang.String" parameterType="java.lang.String">
    SELECT password
    FROM vip
    WHERE username = #{username,jdbcType=VARCHAR}
  </select>
  <update id="pointsToMoney" parameterType="java.lang.String" >
    update vip
    set money = money + points/100,
    points = 0
    where username = (SELECT username FROM token where token = #{token,jdbcType=VARCHAR})
  </update>

  <update id="addMoney">
    update vip
    set money = money + #{money}
    where username = (SELECT username FROM token where token = #{token})
  </update>

  <select id="getAllVip" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vip
  </select>
</mapper>