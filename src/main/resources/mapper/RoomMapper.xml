<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hotel.dao.RoomMapper" >
  <resultMap id="BaseResultMap" type="hotel.model.Room" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="hotelid" property="hotelid" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, hotelid, price, name, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="hotel.model.Room" >
    insert into room (id, hotelid, price, 
      name, status)
    values (#{id,jdbcType=INTEGER}, #{hotelid,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{name,jdbcType=CHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="hotel.model.Room" >
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="hotelid != null" >
        hotelid,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="hotelid != null" >
        #{hotelid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hotel.model.Room" >
    update room
    <set >
      <if test="hotelid != null" >
        hotelid = #{hotelid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hotel.model.Room" >
    update room
    set hotelid = #{hotelid,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      name = #{name,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByHotelId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from room
    where hotelid = #{id,jdbcType=INTEGER}
  </select>

  <resultMap id="ConResultMap" type="hotel.vo.RoomCon" >
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectConRooms" resultMap="ConResultMap" parameterType="java.lang.Integer" >
    SELECT price,count(id) AS `count` FROM room where hotelid = #{id,jdbcType=INTEGER} GROUP BY price;
  </select>
</mapper>